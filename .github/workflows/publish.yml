name: Publish Artifacts

on:
  release:
    types: [published]

jobs:
  publish_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Extract container version
        id: extract_container_version
        run: |
            CONTAINER_VERSION=$(jq -r '.version' package.json)
            echo "CONTAINER_VERSION=$CONTAINER_VERSION" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: github-action
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          file: Containerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_container_version.outputs.CONTAINER_VERSION }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  publish_helm_chart:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract chart version
        id: extract_chart_version
        run: |
            CHART_VERSION=$(yq '.version' helm/Chart.yaml)
            echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_OUTPUT

      - name: Publish Helm chart to GitHub OCI package registry
        uses: appany/helm-oci-chart-releaser@v0.4.1
        with:
          name: manifest-chart
          repository: ${{ github.repository_owner }}
          tag: ${{ steps.extract_chart_version.outputs.CHART_VERSION }}
          path: helm
          registry: ghcr.io
          registry_username: github-action
          registry_password: ${{ secrets.GITHUB_TOKEN }}
